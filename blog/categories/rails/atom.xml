<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | House of Rails]]></title>
  <link href="http://andrewhouse.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://andrewhouse.github.io/"/>
  <updated>2014-09-17T14:52:40-04:00</updated>
  <id>http://andrewhouse.github.io/</id>
  <author>
    <name><![CDATA[Andrew House]]></name>
    <email><![CDATA[andrewhouse621@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Intro to Omniauth]]></title>
    <link href="http://andrewhouse.github.io/blog/2014/09/17/intro-to-omniauth/"/>
    <updated>2014-09-17T09:01:26-04:00</updated>
    <id>http://andrewhouse.github.io/blog/2014/09/17/intro-to-omniauth</id>
    <content type="html"><![CDATA[<p>It is becoming a trend for websites to enable logging into that website
via another.<br>
We&rsquo;ve all seen it.
The buttons that say &ldquo;Sign in with Facebook&rdquo;, or various other
providers.
For some reason unknown to me (really unknown to me because I don&rsquo;t
use social media), seeing these logins provide some kind of weird
validity to a website.
It&rsquo;s like &ldquo;Oh, they are connected with facebook, they must be credible&rdquo;.
When I know perfectly well that its just a little bit of code hooking into
the facebook api.
Regardless, implementing these login features for a user is a
great strategy from a user experience (UX) standpoint.<br><br>
Over the next few blog posts I&rsquo;m going to go over step by step
using provider authentication, and being able to use multiple
providers for the same user.
I feel logging into various providers is a valuable skill for every Rails developer, and
a great tool to be able to use.<br>
In the upcoming posts, I&rsquo;ll use Amazon and Google as my examples.
I&rsquo;ll also detail what is needed to add another provider, and some quirks
about certain ones (Twitter).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Security With Rails]]></title>
    <link href="http://andrewhouse.github.io/blog/2014/09/11/security-with-rails/"/>
    <updated>2014-09-11T07:53:39-04:00</updated>
    <id>http://andrewhouse.github.io/blog/2014/09/11/security-with-rails</id>
    <content type="html"><![CDATA[<p>There is so much I don&rsquo;t know about security.<br>
Yet it is so fascinating.
Yesterday I attended a workshop hosted by <a href="https://nvisium.com/">Nvisium</a>, with the premise
of discussing vulnerabilities in Rails and how to avoid them.
It amazes me how much security professionals know.
In order to understand security, you need to know everything about
the framework you&rsquo;re using, as well as exactly how the web works.<br><br>
The workshop was led by <a href="https://twitter.com/cktricky">Ken Johnson</a>, the
CTO of Nvisium.
I won&rsquo;t go into the details of exactly what we did and what we covered.
Instead I&rsquo;ll focus on mainly what I gained from the workshop.
For me, Security has three faces.<br><br>
The first face is owned by the designers and those who develop the front
end.
For them, the only care for security is that it is there, but doesn&rsquo;t
change how they want to order and design the page. <br><br>
The second face is owned by the developers who want to get code to work.
I am guilty of this.
I generally attack code trying to get a feature to work, not really thinking
about how the parameter I have listed could be sql injected or could
give away a person&rsquo;s id to allow to try to narrow down who is admin
and try to attack that specific person.<br><br>
The last side lies on the ones who want to protect security.
For them, trying to convince the first two to use best security practices
must be an absolute headache.
To take a feature that looks the way the design team wants, and functions
the way the developers want, and tell them that they are vulnerable
to attacks.
It seems to me that they would always be the &ldquo;bad&rdquo; guy in that situation.
People care about security, as long as it doesn&rsquo;t effect their daily lives.<br><br>
I took a lot of notes and got a ton of resources from the workshop.
My plan is to try to do the best I can do make sure that I plug the big
holes of security in my apps.
I know that at my current state of being a junior developer that it would
be impossible to try and do everything, but I will take all the
necessary steps to prevent my app from being completely vulnerable.<br></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redesigning an App]]></title>
    <link href="http://andrewhouse.github.io/blog/2014/08/31/redesigning-an-app/"/>
    <updated>2014-08-31T13:27:26-04:00</updated>
    <id>http://andrewhouse.github.io/blog/2014/08/31/redesigning-an-app</id>
    <content type="html"><![CDATA[<p>I&rsquo;m learning things way too fast.<br>
Currently I am in the process of building a web app for my class at The
Iron Yard.
The app is a centralized place where the teacher can post assignments
and we can post a link to our assignment and check to see if it is finished
or not.
It&rsquo;s going great and it is working.
However, I want it to do so much more.<br><br>
This weekend I found myself making profile pages for each user.
I&rsquo;m not any good at design so it was challenging for me to try to tap into
what little artistic vision I have.
Partway through implementing the design, I kept wanting to work on other
features and develop it so much further.
I want to add a better search feature using Angular (still working on
figuring it out), add a sort function for the assignments, add comments
on each individual assignment a student posts, and so much more!<br><br>
I have ideas galore on how to expand this to fit the needs for our class,
but I don&rsquo;t have enough time to implement them all.
While studying and learning new skills every day, and researching what I need
to do for the app.
I find myself trying to prioritize what features I want to do.
Do I take the least path of resistance and implement what would be easiest?
Or do I study a language I haven&rsquo;t used and try to work in this cool feature?<br><br>
The good news is that I am having fun and want to do them all.
Each feature is in its own a great challenge, and without challenges life is boring.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building an API With Rails]]></title>
    <link href="http://andrewhouse.github.io/blog/2014/08/28/building-an-api-with-rails/"/>
    <updated>2014-08-28T16:10:35-04:00</updated>
    <id>http://andrewhouse.github.io/blog/2014/08/28/building-an-api-with-rails</id>
    <content type="html"><![CDATA[<p>I think API&rsquo;s are amazing.<br>
It&rsquo;s kind of weird how much I&rsquo;m into API&rsquo;s lately.
Yet, I&rsquo;ve only technically made one (and oh my goodness was it a small one).
I hold much value in the flexibility that an API provides.
To be able to talk to multiple devises in different languages by only providing
the necessary data.<br><br>
Data is my thing.<br><br>
It&rsquo;s nice not having to worry about making anything pretty.
If I want to see if my data is working the way I want I can just do a quick curl.
I&rsquo;m currently having a problem figuring out authenticity tokens.
But that is okay, it&rsquo;s just another hurdle to overcome.<br><br>
When I can easily implement an API I feel as though my self worth will go up drastically.
Reason being, at The Iron Yard in Atlanta there are 3 cohorts (currently 2
  since the front end class just graduated) and a well developed API
  could easily tie together all 3 classes.
How cool is that?
To be able to work with multiple people on a singular project.<br>
All because data is badass.<br><br>
I look forward to creating amazing API&rsquo;s in the future and look forward to
understanding enough Angular JS to be able to call on my API&rsquo;s information.
Doing Full Stack work sounds like a lot of work and would be a ton of fun.<br>
I&rsquo;m excited about the future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning by Doing]]></title>
    <link href="http://andrewhouse.github.io/blog/2014/08/21/learning-by-doing/"/>
    <updated>2014-08-21T09:02:02-04:00</updated>
    <id>http://andrewhouse.github.io/blog/2014/08/21/learning-by-doing</id>
    <content type="html"><![CDATA[<p>I have a problem when it comes to learning new skills/languages.<br>
I am very theoretical minded person in a sense that I could read and watch
videos about anything and be content.
However, I have found that knowledge doesn&rsquo;t stick as well with me if I don&rsquo;t
implement what I have learned.<br><br>
Example:<br>
I&rsquo;m in the process of learning <a href="http://iamandrewhouse.com/blog/2014/08/19/starting-angular-js/">Angular Js</a>
and a few months ago I did the Code School course.
When going over the course again, I noticed that I remembered a lot of theory.
Things like, I&rsquo;m able to make controllers in a separate JS file and integrate
them into the HTML directly. Little detailed parts of a whole I remembered, but
when it came to actual implementation I had forgotten the majority of it.
That allowed me to catch up fairly quickly on what I was doing, I felt
when I was learning it again a kind of snowball effect.
Where everything felt strange at first, but the more I did the quicker it
came back to me.
However, I don&rsquo;t want to fall that far back again.
So this time I&rsquo;m going to try a much different strategy.<br><br></p>

<!-- more -->


<p>I&rsquo;ve decided on the majority of the Rails apps that I am going to be building
in my upcoming weeks at The Iron Yard, that I would try to integrate Angular JS
into my front end if just a little bit.
Constantly reminding myself of what it is, how to use it, and how to use its
incredibly responsive design to the optimal efficiency.
I feel like I need to retain what I am learning by keeping on using it.
It seems pretty basic, but it will be effort to constantly be using it and
integrating it into my designs.
Eventually I feel like I will be comfortable enough to not be integrating
Angular JS into Rails, but develop API&rsquo;s with Rails and have Angular call
the JSON data returned and have two separate entities.
This is where I want to be and what I want to develop. <br><br>
I feel strongly about taking my Rails applications towards an API path.
To me, this is where the power of Rails really comes in.
To be able to quickly and efficiently build an API and let multiple
mediums use the data that I create.
One of the other classes at The Iron Yard is an IOS class.
Here in the upcoming weeks we are going to be doing an internal Hackathon,
being able for all of us to use our skills together.
I want to be able to make an API that is usable by IOS, front-end, etc etc.
This excites me greatly.
I have a path and I&rsquo;m looking forward to walking it.</p>
]]></content>
  </entry>
  
</feed>
